@page "/form-beer"
@inject HttpClient Http
@using System.Text.Json;
@using System.Text.Json.Serialization;
<div style="max-width: 800px; margin: auto; padding-top: 150px">
    <MudCard Elevation="2">
        @errorMessage
        <MudCardContent>
            <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                <MudTextField @bind-Value="NameFieldValue" T="string" Label="Nom de la Biere" Required="true"
                    RequiredError="Il vous faut un nom a cette magnifique bière !" />
                <MudTextField @bind-Value="TaglineFieldValue" T="string" Label="Marque" Required="true"
                    RequiredError="Mais donnez lui une petite marque ! PS si vous avez pas d'idée vous pouvez ecrire Paix-dieu" />
                <MudItem xs="12" sm="6" md="4">
                    <MudDatePicker Label="Date brassé" @bind-Date="date" DisableToolbar="true" HelperText="No header" />
                </MudItem>
                <MudTextField T="string" Label="Description" />
                <div class="d-flex">
                    <MudRadioGroup T="string" Required="true" RequiredError="Type de Biere">
                        <MudRadio Option="@("Ipa")">IPA</MudRadio>
                        <MudRadio Option="@("Neipa")">New England IPA</MudRadio>
                        <MudRadio Option="@("Triple")">Triple</MudRadio>
                        <MudRadio Option="@("Blonde")">Blonde</MudRadio>
                        <MudRadio Option="@("South")">South</MudRadio>
                        <MudRadio Option="@("Brune")">Brune</MudRadio>
                        <MudRadio Option="@("Blanche")">Blanche</MudRadio>
                        <MudRadio Option="@("Rouge")">Rouge</MudRadio>
                    </MudRadioGroup>
                </div>
            </MudForm>
        </MudCardContent>
        <MudCardActions>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="postBeer">Valider
            </MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="@(()=>form.Reset())" Class="mx-2">Reset
            </MudButton>
        </MudCardActions>
    </MudCard>


</div>

@code {

    bool success;
    string[] errors = { };
    private bool autoClose;
    private bool readOnly;
    public string NameFieldValue;
    public string TaglineFieldValue;

    public string type;


    private Beer beer;

    MudTextField<string> pwField1;
    MudForm form;

    MudDatePicker _picker;
    DateTime? date = DateTime.Today;
    private string errorMessage;

    public async void postBeer()
    {
        beer = new Beer(NameFieldValue, TaglineFieldValue, "ipa", "descrpition", DateTime.Now, 8, "test");
        using var response = await Http.PostAsJsonAsync("https://localhost:5002/api/beer", beer);
        if (!response.IsSuccessStatusCode)
        {
            errorMessage = response.ReasonPhrase;
            Console.WriteLine($"There was an error! {errorMessage}");
            return;
        }
        else
        {
            errorMessage = "C DANS LA BDD WSHHHHH";
        }
        var toto = await response.Content.ReadFromJsonAsync<Beer>();

    }
}