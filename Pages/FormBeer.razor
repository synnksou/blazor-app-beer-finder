@page "/form-beer"
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using System.Net.Http;
@using System.Threading.Tasks;

<div style="max-width: 800px; margin: auto;">
    <MudCard Elevation="2">
        <MudCardContent>
            <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                <MudTextField T="string" Label="Nom de la Biere" Required="true"
                    RequiredError="Il vous faut un nom a cette magnifique bière !" />
                <MudTextField T="string" Label="Marque" Required="true"
                    RequiredError="Mais donnez lui une petite marque ! PS si vous avez pas d'idée vous pouvez ecrire Paix-dieu" />
                <MudItem xs="12" sm="6" md="4">
                    <MudDatePicker Label="Date brassé" @bind-Date="date" DisableToolbar="true" HelperText="No header" />
                </MudItem>
                <MudTextField T="string" Label="Description" />
                <div class="d-flex">
                    <MudRadioGroup T="string" Required="true" RequiredError="Type de Biere">
                        <MudRadio Option="@("Ipa")">IPA</MudRadio>
                        <MudRadio Option="@("Neipa")">New England IPA</MudRadio>
                        <MudRadio Option="@("Triple")">Triple</MudRadio>
                        <MudRadio Option="@("Blonde")">Blonde</MudRadio>
                        <MudRadio Option="@("South")">South</MudRadio>
                        <MudRadio Option="@("Brune")">Brune</MudRadio>
                        <MudRadio Option="@("Blanche")">Blanche</MudRadio>
                        <MudRadio Option="@("Rouge")">Rouge</MudRadio>
                    </MudRadioGroup>
                </div>
            </MudForm>
        </MudCardContent>
        <MudCardActions>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(()=>form.Validate())">Validate
            </MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="@(()=>form.Reset())" Class="mx-2">Reset
            </MudButton>
            <MudButton Variant="Variant.Filled" OnClick="@(()=>form.ResetValidation())">Reset Validation</MudButton>
        </MudCardActions>
    </MudCard>


</div>

@code {
    bool success;
    string[] errors = { };
    private bool autoClose;
    private bool readOnly;

    @* private Beer beer; *@

    MudTextField<string> pwField1;
    MudForm form;

    MudDatePicker _picker;
    DateTime? date = DateTime.Today;

    @* protected override async Task OnInitializedAsync()
        {
        var postBody = new { Title = "Blazor POST Request Example" };
        using var response = await HttpClient.PostAsJsonAsync("https://reqres.in/api/articles", postBody);

        // convert response data to Article object
        beer = await response.Content.ReadFromJsonAsync<Beer>();
        }
    *@
}